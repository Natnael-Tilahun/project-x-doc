{"remainingRequest":"/Users/apple/Documents/Projects/Vue/project-x-doc/docs/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/apple/Documents/Projects/Vue/project-x-doc/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/apple/Documents/Projects/Vue/project-x-doc/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/apple/Documents/Projects/Vue/project-x-doc/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/apple/Documents/Projects/Vue/project-x-doc/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/apple/Documents/Projects/Vue/project-x-doc/docs/src/frontend/guide/usage-and-features.md?vue&type=template&id=2db7127b","dependencies":[{"path":"/Users/apple/Documents/Projects/Vue/project-x-doc/docs/src/frontend/guide/usage-and-features.md","mtime":1704221702856},{"path":"/Users/apple/Documents/Projects/Vue/project-x-doc/docs/node_modules/cache-loader/dist/cjs.js","mtime":1701418991579},{"path":"/Users/apple/Documents/Projects/Vue/project-x-doc/docs/node_modules/cache-loader/dist/cjs.js","mtime":1701418991579},{"path":"/Users/apple/Documents/Projects/Vue/project-x-doc/docs/node_modules/babel-loader/lib/index.js","mtime":1701418990425},{"path":"/Users/apple/Documents/Projects/Vue/project-x-doc/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1701418990000},{"path":"/Users/apple/Documents/Projects/Vue/project-x-doc/docs/node_modules/cache-loader/dist/cjs.js","mtime":1701418991579},{"path":"/Users/apple/Documents/Projects/Vue/project-x-doc/docs/node_modules/vue-loader/lib/index.js","mtime":1701418989994},{"path":"/Users/apple/Documents/Projects/Vue/project-x-doc/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1701418992641}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}